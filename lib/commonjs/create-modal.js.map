{"version":3,"sources":["create-modal.tsx"],"names":["createModal","Content","cancelOnBackButtonPress","cancelOnBackdropPress","modalProps","React","forwardRef","_","ref","handleBackButtonPress","handleBackdropPress","cancel","confirm","desiredVisibility","handleModalHidden","handleModalShown","param","visibility","backdropTransitionOutTiming","onBackdropPress","onBackButtonPress","onModalHide","onModalWillShow","style","restModalProps","_handleBackdropPress","_handleBackButtonPress","_handleModalHide","_handleModalWillShow","styles","modal","StyleSheet","create","margin","padding"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AACA;;;;;;;;;;AAsBA;AACA;AACA;AACO,MAAMA,WAAW,GAAG,CAIzB,GAAG,CACDC,OADC,EAED;AACEC,EAAAA,uBAAuB,GAAG,KAD5B;AAEEC,EAAAA,qBAAqB,GAAG,KAF1B;AAGEC,EAAAA,UAAU,GAAG;AAHf,IAII,EANH,CAJsB,kBAazBC,eAAMC,UAAN,CAA6C,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACvD,QAAM;AACJC,IAAAA,qBADI;AAEJC,IAAAA,mBAFI;AAGJC,IAAAA,MAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA,iBALI;AAMJC,IAAAA,iBANI;AAOJC,IAAAA,gBAPI;AAQJC,IAAAA,KARI;AASJC,IAAAA;AATI,MAUF,0CAAkBT,GAAlB,EAAuB;AACzBN,IAAAA,uBADyB;AAEzBC,IAAAA;AAFyB,GAAvB,CAVJ;AAeA,QAAM;AACJe,IAAAA,2BADI;AAEJC,IAAAA,eAFI;AAGJC,IAAAA,iBAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,eALI;AAMJC,IAAAA,KANI;AAOJ,OAAGC;AAPC,MAQFpB,UARJ;;AAUA,QAAMqB,oBAAoB,GAAG,wBAE3B,MAAM;AACNf,IAAAA,mBAAmB;AACnBS,IAAAA,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe;AAChB,GAL4B,EAK1B,CAACT,mBAAD,EAAsBS,eAAtB,CAL0B,CAA7B;;AAOA,QAAMO,sBAAsB,GAAG,wBAE7B,MAAM;AACNjB,IAAAA,qBAAqB;AACrBW,IAAAA,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB;AAClB,GAL8B,EAK5B,CAACX,qBAAD,EAAwBW,iBAAxB,CAL4B,CAA/B;;AAOA,QAAMO,gBAAgB,GAAG,wBAAuC,MAAM;AACpEb,IAAAA,iBAAiB;AACjBO,IAAAA,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW;AACZ,GAHwB,EAGtB,CAACP,iBAAD,EAAoBO,WAApB,CAHsB,CAAzB;;AAKA,QAAMO,oBAAoB,GAAG,wBAE3B,MAAM;AACNb,IAAAA,gBAAgB;AAChBO,IAAAA,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe;AAChB,GAL4B,EAK1B,CAACP,gBAAD,EAAmBO,eAAnB,CAL0B,CAA7B;;AAOA,sBACE,6BAAC,yBAAD;AACE,IAAA,SAAS,EAAET,iBADb;AAEE,IAAA,2BAA2B,EAAEK,2BAAF,aAAEA,2BAAF,cAAEA,2BAAF,GAAiC,CAF9D;AAGE,IAAA,eAAe,EAAEO,oBAHnB;AAIE,IAAA,iBAAiB,EAAEC,sBAJrB;AAKE,IAAA,WAAW,EAAEC,gBALf;AAME,IAAA,eAAe,EAAEC,oBANnB;AAOE,IAAA,KAAK,EAAE,CAACC,MAAM,CAACC,KAAR,EAAeP,KAAf;AAPT,KAQMC,cARN,GAUGP,UAAU,KAAK,OAAf,iBACC,6BAAC,OAAD;AAAS,IAAA,OAAO,EAAEL,OAAlB;AAA2B,IAAA,MAAM,EAAED,MAAnC;AAA2C,IAAA,KAAK,EAAEK;AAAlD,IAXJ,CADF;AAgBD,CApED,CAbK;;;;AAmFP,MAAMa,MAAM,GAAGE,wBAAWC,MAAX,CAAkB;AAC/BF,EAAAA,KAAK,EAAE;AACLG,IAAAA,MAAM,EAAE,CADH;AAELC,IAAAA,OAAO,EAAE;AAFJ;AADwB,CAAlB,CAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport type { ModalProps } from 'react-native-modal';\nimport Modal from 'react-native-modal';\nimport type { ModalConfirmFunction } from './modal-confirm-function';\nimport { useModalViewModel } from './use-modal-view-model';\nimport { StyleSheet } from 'react-native';\nimport type { ModalInstance } from './modal-instance';\n\nexport type CreateModalOption = {\n  cancelOnBackdropPress?: boolean; // 배경 클릭시 취소 여부\n  cancelOnBackButtonPress?: boolean; // 뒤로가기 버튼 클릭시 취소 여부\n  modalProps?: Omit<Partial<ModalProps>, 'isVisible'>;\n};\n\nexport type CreateModalFunctionParam<\n  Data extends unknown = void, // 모달 결과로 받을 값의 타입\n  Param extends unknown = void\n> = [\n  // 모달 내용 컴포넌트\n  Content: React.VoidFunctionComponent<{\n    confirm: ModalConfirmFunction<Data>; // 모달 종료 함수 (승인)\n    cancel: () => void; // 모달 종료 함수 (취소)\n    param: Param;\n  }>,\n  option?: CreateModalOption\n];\n\n/**\n * 모달 컴포넌트 생성 함수\n */\nexport const createModal = <\n  Data extends unknown = void, // 모달 결과로 받을 값의 타입\n  Param extends unknown = void\n>(\n  ...[\n    Content,\n    {\n      cancelOnBackButtonPress = false,\n      cancelOnBackdropPress = false,\n      modalProps = {},\n    } = {},\n  ]: CreateModalFunctionParam<Data, Param>\n) =>\n  React.forwardRef<ModalInstance<Data, Param>>((_, ref) => {\n    const {\n      handleBackButtonPress,\n      handleBackdropPress,\n      cancel,\n      confirm,\n      desiredVisibility,\n      handleModalHidden,\n      handleModalShown,\n      param,\n      visibility,\n    } = useModalViewModel(ref, {\n      cancelOnBackButtonPress,\n      cancelOnBackdropPress,\n    });\n\n    const {\n      backdropTransitionOutTiming,\n      onBackdropPress,\n      onBackButtonPress,\n      onModalHide,\n      onModalWillShow,\n      style,\n      ...restModalProps\n    } = modalProps;\n\n    const _handleBackdropPress = useCallback<\n      ModalProps['onBackdropPress']\n    >(() => {\n      handleBackdropPress();\n      onBackdropPress?.();\n    }, [handleBackdropPress, onBackdropPress]);\n\n    const _handleBackButtonPress = useCallback<\n      ModalProps['onBackButtonPress']\n    >(() => {\n      handleBackButtonPress();\n      onBackButtonPress?.();\n    }, [handleBackButtonPress, onBackButtonPress]);\n\n    const _handleModalHide = useCallback<ModalProps['onModalHide']>(() => {\n      handleModalHidden();\n      onModalHide?.();\n    }, [handleModalHidden, onModalHide]);\n\n    const _handleModalWillShow = useCallback<\n      ModalProps['onModalWillShow']\n    >(() => {\n      handleModalShown();\n      onModalWillShow?.();\n    }, [handleModalShown, onModalWillShow]);\n\n    return (\n      <Modal\n        isVisible={desiredVisibility}\n        backdropTransitionOutTiming={backdropTransitionOutTiming ?? 0}\n        onBackdropPress={_handleBackdropPress}\n        onBackButtonPress={_handleBackButtonPress}\n        onModalHide={_handleModalHide}\n        onModalWillShow={_handleModalWillShow}\n        style={[styles.modal, style]}\n        {...restModalProps}\n      >\n        {visibility === 'SHOWN' && (\n          <Content confirm={confirm} cancel={cancel} param={param!} />\n        )}\n      </Modal>\n    );\n  });\n\nconst styles = StyleSheet.create({\n  modal: {\n    margin: 0,\n    padding: 0,\n  },\n});\n"]}