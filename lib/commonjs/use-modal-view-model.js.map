{"version":3,"sources":["use-modal-view-model.tsx"],"names":["useModalViewModel","ref","cancelOnBackButtonPress","cancelOnBackdropPress","desiredVisibility","setDesiredVisibility","result$","Subject","visibility$","BehaviorSubject","param","setParam","visibility","setVisibility","value","subscription","subscribe","unsubscribe","show","_param","next","confirm","data","pipe","type","ModalResultType","CONFIRM","cancel","CANCEL","handleBackdropPress","handleBackButtonPress","handleModalShown","handleModalHidden"],"mappings":";;;;;;;AAAA;;AAQA;;AACA;;AAIA;;AAIO,MAAMA,iBAAiB,GAAG,CAI/BC,GAJ+B,EAQ/B;AACEC,EAAAA,uBAAuB,GAAG,KAD5B;AAEEC,EAAAA,qBAAqB,GAAG;AAF1B,IAMI,EAd2B,KAe5B;AACH;AACA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4C,qBAAS,KAAT,CAAlD,CAFG,CAGH;;AACA,QAAM,CAACC,OAAD,IAAY,qBAAS,MAAM,IAAIC,aAAJ,EAAf,CAAlB,CAJG,CAKH;;AACA,QAAM,CAACC,WAAD,IAAgB,qBACpB,MAAM,IAAIC,qBAAJ,CAAqC,QAArC,CADc,CAAtB;AAGA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB,sBAA1B;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B,qBAClCL,WAAW,CAACM,KADsB,CAApC;AAIA,wBAAU,MAAM;AACd,UAAMC,YAAY,GAAGP,WAAW,CAACQ,SAAZ,CAAuBF,KAAD,IAAW;AACpDD,MAAAA,aAAa,CAACC,KAAD,CAAb;AACD,KAFoB,CAArB;AAGA,WAAO,MAAMC,YAAY,CAACE,WAAb,EAAb;AACD,GALD,EAKG,CAACT,WAAD,CALH;AAOA,kCACEP,GADF,EAEE,OAAO;AACL;AACAiB,IAAAA,IAAI,EAAGC,MAAD,IAAmB;AACvBR,MAAAA,QAAQ,CAACQ,MAAD,CAAR,CADuB,CAEvB;;AACAd,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAG,MAAAA,WAAW,CAACY,IAAZ,CAAiB,OAAjB,EAJuB,CAKvB;;AACA,aAAO,0BAAed,OAAf,CAAP;AACD;AATI,GAAP,CAFF,EAaE,CAACA,OAAD,EAAUE,WAAV,CAbF,EArBG,CAqCH;;AACA,QAAMa,OAAO,GAAG,yBACd;AACCC,EAAAA,IAAD,IAAU;AACR;AACAjB,IAAAA,oBAAoB,CAAC,KAAD,CAApB,CAFQ,CAGR;;AACAG,IAAAA,WAAW,CACRe,IADH,CAEI,uBAAQT,KAAD,IAAWA,KAAK,KAAK,QAA5B,CAFJ,EAGI,uBAHJ,EAKGE,SALH,CAKa,MAAM;AACfV,MAAAA,OAAO,CAACc,IAAR,CAAa;AACXI,QAAAA,IAAI,EAAEC,iCAAgBC,OADX;AAEX;AACAJ,QAAAA;AAHW,OAAb;AAKD,KAXH;AAYD,GAlBa,EAmBd,CAAChB,OAAD,EAAUE,WAAV,CAnBc,CAAhB,CAtCG,CA4DH;;AACA,QAAMmB,MAAM,GAAG,wBAAY,MAAM;AAC/B;AACAtB,IAAAA,oBAAoB,CAAC,KAAD,CAApB,CAF+B,CAG/B;;AACAG,IAAAA,WAAW,CACRe,IADH,CAEI,uBAAQT,KAAD,IAAWA,KAAK,KAAK,QAA5B,CAFJ,EAGI,uBAHJ,EAKGE,SALH,CAKa,MAAM;AACfV,MAAAA,OAAO,CAACc,IAAR,CAAa;AACXI,QAAAA,IAAI,EAAEC,iCAAgBG;AADX,OAAb;AAGD,KATH;AAUD,GAdc,EAcZ,CAACtB,OAAD,EAAUE,WAAV,CAdY,CAAf,CA7DG,CA6EH;;AACA,QAAMqB,mBAAmB,GAAG,wBAAY,MAAM;AAC5C1B,IAAAA,qBAAqB,IAAIwB,MAAM,EAA/B;AACD,GAF2B,EAEzB,CAACA,MAAD,EAASxB,qBAAT,CAFyB,CAA5B,CA9EG,CAkFH;;AACA,QAAM2B,qBAAqB,GAAG,wBAAY,MAAM;AAC9C5B,IAAAA,uBAAuB,IAAIyB,MAAM,EAAjC;AACD,GAF6B,EAE3B,CAACA,MAAD,EAASzB,uBAAT,CAF2B,CAA9B,CAnFG,CAuFH;;AACA,QAAM6B,gBAAgB,GAAG,wBAAY,MAAM;AACzCvB,IAAAA,WAAW,CAACY,IAAZ,CAAiB,OAAjB;AACD,GAFwB,EAEtB,CAACZ,WAAD,CAFsB,CAAzB,CAxFG,CA4FH;;AACA,QAAMwB,iBAAiB,GAAG,wBAAY,MAAM;AAC1CxB,IAAAA,WAAW,CAACY,IAAZ,CAAiB,QAAjB;AACD,GAFyB,EAEvB,CAACZ,WAAD,CAFuB,CAA1B;AAIA,SAAO,oBACL,OAAO;AACLa,IAAAA,OADK;AAELM,IAAAA,MAFK;AAGLvB,IAAAA,iBAHK;AAIL0B,IAAAA,qBAJK;AAKLD,IAAAA,mBALK;AAMLE,IAAAA,gBANK;AAOLC,IAAAA,iBAPK;AAQLtB,IAAAA,KARK;AASLE,IAAAA;AATK,GAAP,CADK,EAYL,CACES,OADF,EAEEM,MAFF,EAGEvB,iBAHF,EAIE0B,qBAJF,EAKED,mBALF,EAMEE,gBANF,EAOEC,iBAPF,EAQEtB,KARF,EASEE,UATF,CAZK,CAAP;AAwBD,CAxIM","sourcesContent":["import {\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useState,\n} from 'react';\nimport { BehaviorSubject, firstValueFrom, Subject } from 'rxjs';\nimport { filter, first } from 'rxjs/operators';\nimport type { ModalInstance } from './modal-instance';\nimport type { ModalResult } from './modal-result';\nimport type { ModalConfirmFunction } from './modal-confirm-function';\nimport { ModalResultType } from './modal-result-type';\n\ntype ModalVisibility = 'HIDDEN' | 'SHOWN';\n\nexport const useModalViewModel = <\n  Data extends unknown = void, // 모달 결과로 받을 값의 타입\n  Param extends unknown = void\n>(\n  ref:\n    | ((instance: ModalInstance<Data, Param> | null) => void)\n    | MutableRefObject<ModalInstance<Data, Param> | null>\n    | null,\n  {\n    cancelOnBackButtonPress = false,\n    cancelOnBackdropPress = false,\n  }: {\n    cancelOnBackdropPress?: boolean; // 배경 클릭시 취소 여부\n    cancelOnBackButtonPress?: boolean; // 뒤로가기 버튼 클릭시 취소 여부\n  } = {}\n) => {\n  // desired 표시 상태 (이 값이 true 라고 해서 모달이 표시된 상태는 아닙니다. false 도 마찬가지)\n  const [desiredVisibility, setDesiredVisibility] = useState(false);\n  // AlertResult Subject\n  const [result$] = useState(() => new Subject<ModalResult<Data>>());\n  // 보여짐/숨겨짐 상태\n  const [visibility$] = useState(\n    () => new BehaviorSubject<ModalVisibility>('HIDDEN')\n  );\n  const [param, setParam] = useState<Param>();\n  const [visibility, setVisibility] = useState<ModalVisibility>(\n    visibility$.value\n  );\n\n  useEffect(() => {\n    const subscription = visibility$.subscribe((value) => {\n      setVisibility(value);\n    });\n    return () => subscription.unsubscribe();\n  }, [visibility$]);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      // @ts-ignore\n      show: (_param: Param) => {\n        setParam(_param);\n        // 모달 표시 상태로 변경 시작\n        setDesiredVisibility(true);\n        visibility$.next('SHOWN');\n        // 모달 결과 Subject 에서\n        return firstValueFrom(result$);\n      },\n    }),\n    [result$, visibility$]\n  );\n\n  // 모달 종료 (승인)\n  const confirm = useCallback<ModalConfirmFunction<Data>>(\n    // @ts-ignore\n    (data) => {\n      // 숨김 상태로 변경 시작\n      setDesiredVisibility(false);\n      // 숨김 상태로 변경되면 result 발행\n      visibility$\n        .pipe(\n          filter((value) => value === 'HIDDEN'),\n          first()\n        )\n        .subscribe(() => {\n          result$.next({\n            type: ModalResultType.CONFIRM,\n            // @ts-ignore\n            data,\n          });\n        });\n    },\n    [result$, visibility$]\n  );\n\n  // 모달 종료 (취소)\n  const cancel = useCallback(() => {\n    // 숨김 상태로 변경 시작\n    setDesiredVisibility(false);\n    // 숨김 상태로 변경되면 result 발행\n    visibility$\n      .pipe(\n        filter((value) => value === 'HIDDEN'),\n        first()\n      )\n      .subscribe(() => {\n        result$.next({\n          type: ModalResultType.CANCEL,\n        });\n      });\n  }, [result$, visibility$]);\n\n  // 배경 클릭 핸들\n  const handleBackdropPress = useCallback(() => {\n    cancelOnBackdropPress && cancel();\n  }, [cancel, cancelOnBackdropPress]);\n\n  // 뒤로가기 버튼 클릭 핸들\n  const handleBackButtonPress = useCallback(() => {\n    cancelOnBackButtonPress && cancel();\n  }, [cancel, cancelOnBackButtonPress]);\n\n  // 모달 보여짐 이벤트 핸들\n  const handleModalShown = useCallback(() => {\n    visibility$.next('SHOWN');\n  }, [visibility$]);\n\n  // 모달 숨겨짐 이벤트 핸들\n  const handleModalHidden = useCallback(() => {\n    visibility$.next('HIDDEN');\n  }, [visibility$]);\n\n  return useMemo(\n    () => ({\n      confirm,\n      cancel,\n      desiredVisibility,\n      handleBackButtonPress,\n      handleBackdropPress,\n      handleModalShown,\n      handleModalHidden,\n      param,\n      visibility,\n    }),\n    [\n      confirm,\n      cancel,\n      desiredVisibility,\n      handleBackButtonPress,\n      handleBackdropPress,\n      handleModalShown,\n      handleModalHidden,\n      param,\n      visibility,\n    ]\n  );\n};\n"]}