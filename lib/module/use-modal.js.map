{"version":3,"sources":["use-modal.tsx"],"names":["React","useCallback","useContext","useEffect","useMemo","useState","BehaviorSubject","firstValueFrom","filter","ModalContext","isNotNil","ModalIdGenerator","useModal","modal","context","modalId","String","getInstance","generate","instance$","clone","cloneElement","ref","instance","next","set","delete","show","param","pipe"],"mappings":"AAAA,OAAOA,KAAP,IAEEC,WAFF,EAGEC,UAHF,EAIEC,SAJF,EAKEC,OALF,EAMEC,QANF,QAOO,OAPP;AAQA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,MAAhD;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAGA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;;AAIA;AACA;AACA;AACA,OAAO,MAAMC,QAAQ,GAGnBC,KAHsB,IAInB;AACH,QAAMC,OAAO,GAAGZ,UAAU,CAACO,YAAD,CAA1B,CADG,CAEH;;AACA,QAAMM,OAAO,GAAGX,OAAO,CACrB,MAAMY,MAAM,CAACL,gBAAgB,CAACM,WAAjB,GAA+BC,QAA/B,EAAD,CADS,EAErB,EAFqB,CAAvB;AAKA,QAAM,CAACC,SAAD,IAAcd,QAAQ,CAC1B,MAAM,IAAIC,eAAJ,CAAoD,IAApD,CADoB,CAA5B;AAIAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,KAAK,gBAAGpB,KAAK,CAACqB,YAAN,CAA6BR,KAA7B,EAAoC;AAChDS,MAAAA,GAAG,EAAGC,QAAD,IAAc;AACjBJ,QAAAA,SAAS,CAACK,IAAV,CAAeD,QAAf;AACD;AAH+C,KAApC,CAAd;AAKAT,IAAAA,OAAO,CAACW,GAAR,CAAYV,OAAZ,EAAqBK,KAArB;AAEA,WAAO,MAAM;AACXN,MAAAA,OAAO,CAACY,MAAR,CAAeX,OAAf;AACD,KAFD;AAGD,GAXQ,EAWN,CAACD,OAAD,EAAUK,SAAV,EAAqBN,KAArB,EAA4BE,OAA5B,CAXM,CAAT;AAaA,QAAMY,IAAI,GAAG1B,WAAW,CACtB,MAAO2B,KAAP,IACE,CAAC,MAAMrB,cAAc,CAACY,SAAS,CAACU,IAAV,CAAerB,MAAM,CAACE,QAAD,CAArB,CAAD,CAArB,EAAyDiB,IAAzD,CAA8DC,KAA9D,CAFoB,EAGtB,CAACT,SAAD,CAHsB,CAAxB;AAMA,SAAOf,OAAO,CAA0B,MAAM;AAC5C,WAAO;AACLuB,MAAAA;AADK,KAAP;AAGD,GAJa,EAIX,CAACA,IAAD,CAJW,CAAd;AAKD,CAxCM","sourcesContent":["import React, {\n  RefAttributes,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { BehaviorSubject, firstValueFrom } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { ModalContext } from './modal-context';\nimport type { ModalInstance } from './modal-instance';\nimport type { ForwardedRef } from './util/forwarde-ref';\nimport { isNotNil } from './util/is-not-nil';\nimport { ModalIdGenerator } from './modal-id-generator';\n\ntype ModalRef = RefAttributes<ModalInstance<any, any>>;\n\n/**\n * 모달을 등록하는 hook\n */\nexport const useModal = <\n  Component extends React.ForwardRefExoticComponent<ModalRef>\n>(\n  modal: React.ReactElement\n) => {\n  const context = useContext(ModalContext);\n  // 모달 ID\n  const modalId = useMemo(\n    () => String(ModalIdGenerator.getInstance().generate()),\n    []\n  );\n\n  const [instance$] = useState(\n    () => new BehaviorSubject<ModalInstance<any, any> | null>(null)\n  );\n\n  useEffect(() => {\n    const clone = React.cloneElement<ModalRef>(modal, {\n      ref: (instance) => {\n        instance$.next(instance);\n      },\n    });\n    context.set(modalId, clone);\n\n    return () => {\n      context.delete(modalId);\n    };\n  }, [context, instance$, modal, modalId]);\n\n  const show = useCallback<ForwardedRef<Component>['show']>(\n    async (param) =>\n      (await firstValueFrom(instance$.pipe(filter(isNotNil)))).show(param),\n    [instance$]\n  );\n\n  return useMemo<ForwardedRef<Component>>(() => {\n    return {\n      show,\n    } as ForwardedRef<Component>;\n  }, [show]);\n};\n"]}